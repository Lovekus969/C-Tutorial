1. Variables in C

    A variable is a name given to a memory location that stores data.

Rules:

    Must start with a letter or underscore (_name, age ‚úÖ but 1num ‚ùå).
    Case-sensitive (Age ‚â† age).
    Must be declared before use.

2. Leading underscore

C allows variables/functions starting with _, but Names beginning with _ followed by an uppercase letter or another _ are reserved for the implementation (compiler, standard library).

Example: _IO_FILE is used internally by < stdio.h>

So, as a best practice, don‚Äôt start your own identifiers with _, to avoid conflicts.

üîπ 3. Used in unused variables

Sometimes programmers name variables _ to signal ‚Äúignore this‚Äù.
(Not standard in plain C, but common in C++/POSIX environments.)



                                                    Common Data Types in C and Memory Usage


            | Data Type      | Size (Typical on 32/64-bit system)         | Range (Approx)                               | Format Specifier |
| -------------- | ------------------------------------------ | -------------------------------------------- | ---------------- |
| `char`         | **1 byte = 8 bits**                        | -128 to 127 (signed) / 0 to 255 (unsigned)   | `%c` / `%d`      |
| `short`        | **2 bytes = 16 bits**                      | -32,768 to 32,767                            | `%hd`            |
| `int`          | **4 bytes = 32 bits**                      | -2,147,483,648 to 2,147,483,647              | `%d`             |
| `unsigned int` | **4 bytes = 32 bits**                      | 0 to 4,294,967,295                           | `%u`             |
| `long`         | **4 or 8 bytes** (depends on system)       | -2,147,483,648 to 2,147,483,647 (if 4 bytes) | `%ld`            |
| `long long`    | **8 bytes = 64 bits**                      | about ¬±9.22e18                               | `%lld`           |
| `float`        | **4 bytes = 32 bits**                      | 6‚Äì7 decimal digits precision                 | `%f`             |
| `double`       | **8 bytes = 64 bits**                      | 15‚Äì16 decimal digits precision               | `%lf`            |
| `long double`  | **10, 12, or 16 bytes** (system-dependent) | More precision than double                   | `%Lf`            |


What is a Keyword?

        A keyword in C is a reserved word that has a special meaning to the compiler.
        
        They are used to define the structure of a C program.
        
        You cannot use them as variable names, function names, or identifiers





                                    List of C Keywords (ANSI C / C89 standard, 32 keywords)


                                        auto       break     case        char       const
                                        continue   default   do          double     else
                                        enum       extern    float       for        goto
                                        if         int       long        register   return
                                        short      signed    sizeof      static     struct
                                        switch     typedef   union       unsigned   void
                                        volatile   while

